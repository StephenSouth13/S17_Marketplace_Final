// sanity/schemaTypes/productType.ts

// Nh·∫≠p bi·ªÉu t∆∞·ª£ng v√† h√†m ƒë·ªãnh nghƒ©a t·ª´ Sanity
import { TrolleyIcon } from "@sanity/icons";
import { defineField, defineType } from "sanity";

// ƒê·ªãnh nghƒ©a ki·ªÉu s·∫£n ph·∫©m
export const productType = defineType({
  name: "product",
  title: "S·∫£n ph·∫©m", // Ti√™u ƒë·ªÅ ti·∫øng Vi·ªát
  type: "document",
  icon: TrolleyIcon, // Bi·ªÉu t∆∞·ª£ng Xe ƒë·∫©y h√†ng
  fields: [
    defineField({
      name: "name",
      title: "T√™n S·∫£n ph·∫©m",
      type: "string",
      validation: (Rule) => Rule.required(), // B·∫Øt bu·ªôc nh·∫≠p
    }),
    defineField({
      name: "slug",
      title: "Slug (ƒê∆∞·ªùng d·∫´n)",
      type: "slug",
      options: {
        source: "name", // T·ª± ƒë·ªông t·∫°o t·ª´ tr∆∞·ªùng 'name'
        maxLength: 96,
      },
      validation: (Rule) => Rule.required(), // B·∫Øt bu·ªôc nh·∫≠p
    }),
    defineField({
      name: "images",
      title: "H√¨nh ·∫£nh S·∫£n ph·∫©m",
      type: "array",
      of: [{ type: "image", options: { hotspot: true } }], // Cho ph√©p ch·ªçn ƒëi·ªÉm n√≥ng (hotspot)
    }),
    defineField({
      name: "description",
      title: "M√¥ t·∫£",
      type: "string",
    }),
    defineField({
      name: "price",
      title: "Gi√° b√°n",
      type: "number",
      validation: (Rule) => Rule.required().min(0), // B·∫Øt bu·ªôc v√† ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0
    }),
    defineField({
      name: "discount",
      title: "Chi·∫øt kh·∫•u (%)", // ƒê·ªïi t√™n r√µ r√†ng h∆°n l√† Chi·∫øt kh·∫•u (%)
      type: "number",
      validation: (Rule) => Rule.required().min(0), // B·∫Øt bu·ªôc v√† ph·∫£i l·ªõn h∆°n ho·∫∑c b·∫±ng 0
    }),
    defineField({
      name: "categories",
      title: "Danh m·ª•c",
      type: "array",
      of: [{ type: "reference", to: { type: "category" } }], // Tham chi·∫øu ƒë·∫øn ki·ªÉu 'category'
    }),
    defineField({
      name: "stock",
      title: "T·ªìn kho",
      type: "number",
      validation: (Rule) => Rule.min(0), // T·ªëi thi·ªÉu l√† 0
    }),
    defineField({
      name: "brand",
      title: "Th∆∞∆°ng hi·ªáu",
      type: "reference",
      to: { type: "brand" }, // Tham chi·∫øu ƒë·∫øn ki·ªÉu 'brand'
    }),
    defineField({
      name: "status",
      title: "Tr·∫°ng th√°i S·∫£n ph·∫©m",
      type: "string",
      options: {
        list: [
          { title: "M·ªõi", value: "new" }, // M·ªõi (New)
          { title: "N·ªïi b·∫≠t", value: "hot" }, // N·ªïi b·∫≠t/B√°n ch·∫°y (Hot)
          { title: "Khuy·∫øn m√£i", value: "sale" }, // Gi·∫£m gi√°/Khuy·∫øn m√£i (Sale)
        ],
      },
    }),
    defineField({
      name: "variant",
      title: "Ph√¢n lo·∫°i S·∫£n ph·∫©m (Type)", // ƒê·ªïi t√™n r√µ r√†ng h∆°n trong b·ªëi c·∫£nh S17
      type: "string",
      options: {
        list: [
          // üö® Lu√¥n gi·ªØ 'value' b·∫±ng ti·∫øng Anh kh√¥ng d·∫•u cho logic backend
          { title: "Th·ª±c ph·∫©m", value: "food" },
          { title: "ƒê·ªì u·ªëng", value: "drink" },
          { title: "D·ªãch v·ª•", value: "service" },
          { title: "Kh√°c", value: "others" },
        ],
        layout: "radio", // Hi·ªÉn th·ªã d∆∞·ªõi d·∫°ng radio
      },
      validation: (Rule) => Rule.required(), // B·∫Øt bu·ªôc ch·ªçn lo·∫°i s·∫£n ph·∫©m
    }),
    defineField({
      name: "isFeatured",
      title: "S·∫£n ph·∫©m N·ªïi b·∫≠t (Trang ch·ªß)", // Ti√™u ƒë·ªÅ ti·∫øng Vi·ªát
      type: "boolean",
      description: "B·∫≠t/T·∫Øt ƒë·ªÉ hi·ªÉn th·ªã s·∫£n ph·∫©m n√†y tr√™n Trang ch·ªß.",
      initialValue: false,
    }),
  ],
  preview: {
    select: {
      title: "name",
      media: "images",
      subtitle: "price",
    },
    prepare(selection) {
      const { title, subtitle, media } = selection;
      const image = media && media[0];
      return {
        title: title,
        subtitle: `$${subtitle}`, // Hi·ªÉn th·ªã gi√° k√®m k√Ω hi·ªáu $ (Gi·ªØ nguy√™n ƒë·ªãnh d·∫°ng n√†y ƒë·ªÉ d·ªÖ theo d√µi)
        media: image,
      };
    },
  },
});